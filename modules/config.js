'use strict';

const Path = require( 'path' );

const Cfg = {
  YavaaBase: __dirname + '/../../Yavaa',        // Base Folder for Yavaa
  DBFile:   __dirname + '/../data/data.db3',    // SQLite database file for datasets
  SQLPath:  __dirname + '/sql/',                // path to sql files
  DataPath: __dirname + '/data/',               // path to data files

  DebugDBInMemory: false, //debug: write database to memory and not to file
  DebugLogToDatabase: false, //debug: log output to database
  DebugMaxFinalErrorOut: -1, //debug: how many errors should be displayed again at the end of the log (-1 = infinite)
  loggingLvl: 0b110, // ERRLVL: 0b100, NOTLVL: 0b010, LOGLVL: 0b001

  inputURL: 'https://ec.europa.eu/eurostat/estat-navtree-portlet-prod/BulkDownloadListing?sort=1&file=table_of_contents.xml', //table of contents url
  tocRedownloadTimeDiff: 6*60, //time after which toc should be redownloaded in minutes
  tocInputFile: './data/table_of_contents.xml', //destination file for toc

  dicSource: 'https://ec.europa.eu/eurostat/estat-navtree-portlet-prod/BulkDownloadListing?sort=1&dir=dic%2Fen', //dictionary url
  dicBaseURL: 'https://ec.europa.eu',  // base url to download individual dictionaries
  dicTmpFile:    Path.join( __dirname, '..', 'data', 'dictionaries.htm' ),  // last download of dictionaries TOC
  dicOutputFile: Path.join( __dirname, '..', 'data', 'dictionaries.json' ), //dictionary table of contents
  dicOutputDir:  Path.join( __dirname, '..', 'data', 'turtle', 'dic' ),     //dictionary save directory

  // dictionary file for dimensions
  dimDict: 'https://ec.europa.eu/eurostat/estat-navtree-portlet-prod/BulkDownloadListing?sort=1&file=comp%2Fdic%2Fen%2Fdimlst.dic',
  dimDictFile: './data/dimlist.dic',
  dimDictProcessedFile: './data/dimlist.ttl',

  // dictionary for autogenerated measurement concepts
  measDictFil: './data/measlist.ttl',

  // target file to hold custom labels
  customLabelFile: './data/turtle/customLabels.ttl',

  turtleTemplatesPath: './modules/templates/', //path to turtle templates
  turtleOutputCodelistsDir: './data/turtle/codelists/', //directory for created codelist turtle files
  turtleOutputDatasetsDir: './data/turtle/dsd/', //directory for created dataset turtle files
  turtlePrefixEntries: 'http://eurostat.linked-statistics.org/dic/',
  turtlePrefixCodelist: 'http://yavaa.org/ns/cl/eurostat#',
  turtlePrefixMeasures: 'http://yavaa.org/ns/eurostat/meas/',
  turtleCodelistStopwords: ' \'time\' ', //csv!

  uploadTmp:    './data/upload/',   // temporary folder for upload
  uploadTarget: 'http://localhost:7200/repositories/yavaa/statements', // target URL for upload
  uploadSPARQL: 'http://localhost:7200/repositories/yavaa',            // target URL for SPARQL queries

  titleStopwords: [' by', ' in the', ' between', ',', ':', ' -', ' ('],

  downloadDelay: 5 * 1000, //delay between two downloads (in ms)
  downloadTimeout: 5 * 1000, //timeout for connections (in ms)
  downloadHeaders: { //request headers
    'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1'
  },
  // maximum number of values, so a file is still included
  downloadMaxElements: Math.pow( 10, 7 ),

  // index
  // 620_enableFTS
  // http://graphdb.ontotext.com/documentation/standard/full-text-search.html
  indexName:        'labelIndex',
  indexPredicates:  [
    'http://purl.org/dc/terms/title',
    'http://www.w3.org/2000/01/rdf-schema#label',
    'http://www.w3.org/2004/02/skos/core#prefLabel',
    'http://www.w3.org/2004/02/skos/core#altLabel',
  ]

};
module.exports = Cfg;

//make sure the output paths exists
const Mkdir = require('mkdirp');
Mkdir.sync(Cfg.dicOutputDir);
Mkdir.sync(Cfg.turtleOutputCodelistsDir);
Mkdir.sync(Cfg.turtleOutputDatasetsDir);
Mkdir.sync(Cfg.uploadTmp);